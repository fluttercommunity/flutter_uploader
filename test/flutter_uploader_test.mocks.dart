// Mocks generated by Mockito 5.0.17 from annotations
// in flutter_uploader/test/flutter_uploader_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter/src/services/binary_messenger.dart' as _i3;
import 'package:flutter/src/services/message_codec.dart' as _i2;
import 'package:flutter/src/services/platform_channel.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMethodCodec_0 extends _i1.Fake implements _i2.MethodCodec {}

class _FakeBinaryMessenger_1 extends _i1.Fake implements _i3.BinaryMessenger {}

/// A class which mocks [EventChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventChannel extends _i1.Mock implements _i4.EventChannel {
  MockEventChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  _i2.MethodCodec get codec => (super.noSuchMethod(Invocation.getter(#codec),
      returnValue: _FakeMethodCodec_0()) as _i2.MethodCodec);
  @override
  _i3.BinaryMessenger get binaryMessenger =>
      (super.noSuchMethod(Invocation.getter(#binaryMessenger),
          returnValue: _FakeBinaryMessenger_1()) as _i3.BinaryMessenger);
  @override
  _i5.Stream<dynamic> receiveBroadcastStream([dynamic arguments]) => (super
      .noSuchMethod(Invocation.method(#receiveBroadcastStream, [arguments]),
          returnValue: Stream<dynamic>.empty()) as _i5.Stream<dynamic>);
}

/// A class which mocks [MethodChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMethodChannel extends _i1.Mock implements _i4.MethodChannel {
  MockMethodChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  _i2.MethodCodec get codec => (super.noSuchMethod(Invocation.getter(#codec),
      returnValue: _FakeMethodCodec_0()) as _i2.MethodCodec);
  @override
  _i3.BinaryMessenger get binaryMessenger =>
      (super.noSuchMethod(Invocation.getter(#binaryMessenger),
          returnValue: _FakeBinaryMessenger_1()) as _i3.BinaryMessenger);
  @override
  _i5.Future<T?> invokeMethod<T>(String? method, [dynamic arguments]) =>
      (super.noSuchMethod(Invocation.method(#invokeMethod, [method, arguments]),
          returnValue: Future<T?>.value()) as _i5.Future<T?>);
  @override
  _i5.Future<List<T>?> invokeListMethod<T>(String? method,
          [dynamic arguments]) =>
      (super.noSuchMethod(
          Invocation.method(#invokeListMethod, [method, arguments]),
          returnValue: Future<List<T>?>.value()) as _i5.Future<List<T>?>);
  @override
  _i5.Future<Map<K, V>?> invokeMapMethod<K, V>(String? method,
          [dynamic arguments]) =>
      (super.noSuchMethod(
          Invocation.method(#invokeMapMethod, [method, arguments]),
          returnValue: Future<Map<K, V>?>.value()) as _i5.Future<Map<K, V>?>);
  @override
  void setMethodCallHandler(
          _i5.Future<dynamic> Function(_i2.MethodCall)? handler) =>
      super.noSuchMethod(Invocation.method(#setMethodCallHandler, [handler]),
          returnValueForMissingStub: null);
}
